#include<Servo.h>

Servo R1Toe, R1Knee, R1Thigh,
      R2Toe, R2Knee, R2Thigh,
      R3Toe, R3Knee, R3Thigh,
      L1Toe, L1Knee, L1Thigh,
      L2Toe, L2Knee, L2Thigh,
      L3Toe, L3Knee, L3Thigh;

      
#define MOVE_HEXY_SIZE 864


void setup() {
  // put your setup code here, to run once:
  R1Toe.attach(39);
  R1Knee.attach(38);
  R1Thigh.attach(37);
  R2Toe.attach(42);
  R2Knee.attach(41);
  R2Thigh.attach(40);
  R3Toe.attach(45);
  R3Knee.attach(44);
  R3Thigh.attach(43);
  L1Toe.attach(31);
  L1Knee.attach(32);
  L1Thigh.attach(33);
  L2Toe.attach(28);
  L2Knee.attach(29);
  L2Thigh.attach(30);
  L3Toe.attach(22);
  L3Knee.attach(23);
  L3Thigh.attach(24);
}

void loop() {
  // put your main code here, to run repeatedly:
  move_hexy();
}
const PROGMEM uint16_t move_hexy_time[MOVE_HEXY_SIZE] = {
0, 0, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 208, 209, 210, 210, 211, 212, 212, 213, 213, 214, 214, 214, 215, 215, 215, 216, 216, 216, 217, 217, 217, 217, 217, 217, 218, 218, 218, 218, 218, 219, 219, 219, 219, 219, 220, 220, 434, 434, 435, 436, 436, 436, 437, 437, 437, 437, 438, 438, 639, 640, 641, 642, 642, 643, 644, 645, 645, 646, 646, 647, 647, 647, 648, 648, 648, 649, 649, 649, 649, 650, 650, 650, 650, 650, 651, 651, 651, 651, 651, 652, 652, 652, 652, 652, 853, 854, 854, 855, 855, 856, 856, 856, 857, 857, 857, 858, 1061, 1061, 1062, 1063, 1063, 1063, 1064, 1065, 1065, 1066, 1066, 1067, 1067, 1067, 1067, 1068, 1068, 1068, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1070, 1070, 1070, 1070, 1070, 1070, 1071, 1071, 1071, 1071, 1275, 1275, 1275, 1276, 1276, 1276, 1277, 1277, 1277, 1277, 1277, 1278, 1479, 1480, 1480, 1481, 1481, 1482, 1483, 1483, 1484, 1485, 1485, 1485, 1486, 1487, 1487, 1487, 1488, 1488, 1488, 1489, 1489, 1489, 1489, 1490, 1490, 1490, 1490, 1491, 1491, 1491, 1491, 1491, 1491, 1492, 1492, 1492, 1704, 1704, 1705, 1706, 1707, 1707, 1708, 1709, 1709, 1710, 1710, 1711, 1711, 1711, 1711, 1712, 1712, 1712, 1712, 1712, 1712, 1713, 1713, 1713, 1913, 1914, 1914, 1915, 1916, 1916, 1917, 1918, 1918, 1918, 1919, 1919, 1919, 1920, 1920, 1920, 1920, 1921, 1921, 1921, 1921, 1922, 1922, 1922, 1922, 1922, 1923, 1923, 1923, 1923, 1923, 1924, 1924, 1924, 1924, 1924, 2136, 2137, 2137, 2138, 2139, 2139, 2140, 2140, 2141, 2142, 2142, 2142, 2143, 2143, 2143, 2144, 2144, 2144, 2144, 2144, 2144, 2145, 2145, 2145, 2345, 2346, 2347, 2347, 2348, 2349, 2350, 2350, 2351, 2351, 2352, 2352, 2353, 2353, 2354, 2354, 2354, 2354, 2355, 2355, 2355, 2355, 2356, 2356, 2356, 2356, 2356, 2357, 2357, 2357, 2357, 2357, 2358, 2358, 2358, 2358, 2558, 2559, 2559, 2560, 2560, 2561, 2562, 2562, 2563, 2563, 2564, 2564, 2564, 2564, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2767, 2767, 2768, 2768, 2769, 2769, 2770, 2771, 2771, 2772, 2772, 2773, 2773, 2773, 2774, 2774, 2774, 2774, 2775, 2775, 2775, 2775, 2775, 2775, 2775, 2776, 2776, 2776, 2776, 2776, 2776, 2776, 2777, 2777, 2777, 2777, 2979, 2980, 2980, 2981, 2981, 2982, 2983, 2984, 2984, 2985, 2985, 2986, 2986, 2986, 2986, 2987, 2987, 2987, 2987, 2987, 2988, 2988, 2988, 2988, 3187, 3189, 3190, 3191, 3191, 3192, 3193, 3194, 3195, 3195, 3196, 3197, 3197, 3198, 3198, 3198, 3199, 3199, 3199, 3200, 3200, 3200, 3200, 3200, 3201, 3201, 3201, 3201, 3201, 3202, 3202, 3202, 3202, 3202, 3203, 3203, 32272, 32273, 32273, 32274, 32275, 32275, 32276, 32276, 32276, 32276, 32276, 32276, 32480, 32481, 32482, 32483, 32484, 32484, 32485, 32485, 32486, 32486, 32487, 32487, 32487, 32488, 32488, 32488, 32488, 32488, 32489, 32489, 32489, 32489, 32489, 32489, 32490, 32490, 32490, 32490, 32490, 32490, 32491, 32491, 32491, 32491, 32491, 32491, 32694, 32695, 32695, 32696, 32696, 32697, 32697, 32697, 32697, 32698, 32698, 32698, 32899, 32899, 32900, 32900, 32901, 32902, 32902, 32902, 32903, 32903, 32904, 32904, 32904, 32905, 32905, 32905, 32905, 32906, 32906, 32906, 32907, 32907, 32907, 32907, 32907, 32907, 32907, 32908, 32908, 32908, 32908, 32908, 32908, 32908, 32909, 32909, 33111, 33112, 33113, 33113, 33114, 33115, 33115, 33116, 33116, 33116, 33117, 33117, 33320, 33321, 33322, 33322, 33323, 33324, 33325, 33325, 33326, 33326, 33327, 33327, 33328, 33328, 33328, 33329, 33329, 33329, 33330, 33330, 33330, 33330, 33330, 33331, 33331, 33331, 33331, 33331, 33331, 33332, 33332, 33332, 33332, 33332, 33333, 33333, 33536, 33537, 33537, 33538, 33538, 33539, 33539, 33539, 33539, 33540, 33540, 33540, 33741, 33742, 33743, 33743, 33744, 33745, 33746, 33746, 33747, 33747, 33748, 33749, 33749, 33749, 33750, 33750, 33750, 33751, 33751, 33751, 33752, 33752, 33752, 33752, 33752, 33753, 33753, 33753, 33753, 33753, 33754, 33754, 33754, 33754, 33754, 33755, 33956, 33956, 33957, 33957, 33958, 33958, 33959, 33959, 33960, 33960, 33961, 33961, 33961, 33961, 33961, 33962, 33962, 33962, 33962, 33962, 33962, 33963, 33963, 33963, 34163, 34164, 34165, 34166, 34166, 34167, 34168, 34169, 34169, 34170, 34170, 34171, 34171, 34171, 34172, 34172, 34172, 34173, 34173, 34173, 34174, 34174, 34174, 34174, 34174, 34175, 34175, 34175, 34175, 34175, 34176, 34176, 34176, 34176, 34176, 34176, 34378, 34378, 34379, 34380, 34381, 34381, 34382, 34383, 34383, 34383, 34384, 34384, 34384, 34384, 34384, 34385, 34385, 34385, 34385, 34385, 34385, 34385, 34386, 34386, 34586, 34587, 34587, 34588, 34589, 34589, 34590, 34591, 34591, 34592, 34592, 34593, 34593, 34594, 34594, 34594, 34595, 34595, 34595, 34596, 34596, 34596, 34596, 34596, 34597, 34597, 34597, 34597, 34597, 34598, 34598, 34598, 34598, 34598, 34599, 34599, 34799, 34800, 34800, 34801, 34802, 34802, 34803, 34804, 34804, 34805, 34805, 34805, 34806, 34806, 34806, 34806, 34806, 34807, 34807, 34807, 34807, 34807, 34807, 34807, 35007, 35008, 35009, 35010, 35010, 35011, 35012, 35013, 35013, 35014, 35015, 35015, 35016, 35016, 35016, 35017, 35017, 35018, 35018, 35018, 35019, 35019, 35019, 35019, 35019, 35020, 35020, 35020, 35020, 35021, 35021, 35022, 35022, 35022, 35022, 35022, 35222, 35223, 35223, 35224, 35225, 35225, 35226, 35226, 35227, 35228, 35228, 35229, 35229, 35229, 35229, 35230, 35230, 35230, 35230, 35230, 35231, 35231, 35231, 35231, 35433, 35434, 35434, 35435, 35435, 35436, 35436, 35437, 35438, 35438, 35438, 35439, 35439, 35439, 35440, 35440, 35440, 35440, 35441, 35441, 35441, 35441, 35441, 35441, 35441, 35441, 35442, 35442, 35442, 35442, 35442, 35442, 35442, 35442, 35443, 35443};

const PROGMEM uint8_t move_hexy_servo[MOVE_HEXY_SIZE] = {
6, 6, 10, 5, 10, 14, 5, 9, 14, 9, 13, 13, 6, 6, 10, 5, 10, 14, 5, 9, 14, 9, 25, 13, 21, 25, 13, 21, 26, 17, 7, 22, 26, 17, 7, 22, 18, 20, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 25, 25, 21, 26, 21, 26, 22, 17, 22, 17, 18, 18, 6, 6, 5, 10, 5, 14, 10, 14, 9, 25, 13, 9, 21, 25, 13, 21, 26, 7, 17, 22, 26, 7, 17, 22, 20, 18, 20, 18, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 10, 14, 9, 14, 9, 13, 13, 6, 6, 5, 10, 5, 10, 14, 9, 14, 9, 25, 13, 25, 21, 13, 26, 21, 26, 7, 17, 22, 7, 17, 22, 20, 18, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 25, 25, 21, 26, 21, 17, 26, 22, 17, 22, 18, 18, 6, 6, 5, 5, 10, 10, 9, 14, 9, 14, 25, 13, 25, 13, 21, 26, 21, 17, 7, 22, 26, 17, 7, 22, 18, 20, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 10, 14, 9, 9, 14, 25, 13, 13, 25, 21, 17, 26, 21, 17, 26, 22, 18, 22, 18, 6, 10, 6, 10, 5, 14, 5, 9, 14, 9, 13, 25, 13, 21, 25, 21, 7, 26, 17, 22, 26, 7, 17, 22, 20, 18, 20, 18, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 10, 5, 10, 5, 9, 14, 9, 14, 25, 13, 25, 21, 13, 26, 21, 26, 17, 22, 17, 22, 18, 18, 6, 6, 5, 10, 5, 10, 14, 9, 25, 14, 9, 25, 21, 13, 26, 21, 7, 17, 13, 26, 22, 7, 17, 22, 20, 18, 20, 18, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 10, 14, 9, 14, 9, 25, 13, 25, 13, 21, 26, 21, 17, 26, 22, 17, 22, 18, 18, 6, 6, 5, 10, 5, 10, 9, 14, 9, 14, 25, 13, 25, 21, 13, 26, 17, 7, 21, 26, 17, 7, 22, 18, 20, 22, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 10, 14, 9, 14, 9, 25, 13, 25, 21, 13, 26, 21, 17, 26, 22, 17, 22, 18, 18, 6, 6, 5, 10, 5, 10, 14, 9, 14, 25, 9, 13, 25, 21, 13, 26, 17, 21, 7, 26, 17, 22, 7, 18, 22, 18, 20, 20, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 10, 5, 10, 5, 14, 9, 14, 9, 13, 13, 6, 6, 10, 5, 10, 5, 14, 9, 14, 25, 9, 25, 13, 21, 26, 13, 21, 7, 17, 26, 22, 7, 17, 22, 20, 18, 20, 18, 15, 15, 24, 24, 11, 11, 16, 16, 25, 25, 21, 26, 21, 26, 22, 17, 22, 17, 18, 18, 6, 6, 5, 10, 5, 10, 14, 9, 14, 9, 25, 13, 25, 13, 26, 21, 26, 21, 17, 7, 22, 17, 7, 22, 18, 20, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 14, 10, 14, 9, 13, 9, 13, 6, 6, 10, 5, 10, 5, 14, 9, 25, 14, 9, 25, 21, 13, 17, 26, 7, 21, 13, 17, 26, 7, 22, 18, 20, 22, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 25, 25, 26, 21, 26, 21, 17, 22, 17, 22, 18, 18, 6, 6, 5, 10, 5, 10, 9, 14, 9, 25, 14, 25, 13, 21, 26, 13, 17, 7, 21, 26, 17, 7, 22, 18, 22, 20, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 10, 14, 9, 14, 25, 9, 13, 25, 21, 13, 26, 21, 17, 26, 22, 17, 22, 18, 18, 6, 6, 10, 5, 10, 5, 14, 9, 14, 9, 25, 13, 25, 26, 13, 21, 26, 7, 17, 21, 7, 17, 22, 20, 18, 22, 20, 18, 15, 15, 24, 24, 11, 11, 16, 16, 6, 10, 10, 6, 9, 14, 5, 9, 25, 14, 5, 25, 13, 21, 26, 13, 21, 17, 26, 22, 17, 22, 18, 18, 6, 6, 10, 5, 10, 5, 14, 9, 14, 9, 25, 13, 25, 21, 13, 26, 21, 26, 7, 17, 22, 7, 17, 22, 20, 18, 20, 18, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 10, 14, 9, 14, 9, 25, 13, 25, 13, 26, 21, 26, 21, 17, 22, 17, 22, 18, 18, 6, 6, 10, 5, 10, 5, 14, 9, 14, 9, 13, 25, 13, 25, 21, 26, 21, 17, 7, 26, 22, 17, 7, 22, 18, 20, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16, 6, 6, 5, 10, 5, 10, 14, 9, 14, 9, 13, 25, 13, 25, 21, 26, 21, 17, 22, 26, 17, 22, 18, 18, 6, 6, 10, 5, 10, 5, 9, 14, 9, 14, 25, 13, 25, 13, 21, 26, 21, 26, 17, 7, 22, 17, 7, 22, 18, 20, 18, 20, 15, 15, 24, 24, 11, 11, 16, 16};

const PROGMEM uint8_t move_hexy_pos[MOVE_HEXY_SIZE] = {
209 , 150 , 209 , 109 , 141 , 209 , 50 , 109 , 150 , 50 , 109 , 50 , 150 , 209 , 141 , 50 , 209 , 150 , 109 , 50 , 209 , 109 , 209 , 50 , 209 , 209 , 109 , 209 , 109 , 209 , 205 , 109 , 109 , 209 , 183 , 109 , 109 , 122 , 109 , 150 , 150 , 116 , 150 , 116 , 122 , 150 , 205 , 183 , 209 , 150 , 209 , 109 , 141 , 50 , 109 , 209 , 50 , 150 , 109 , 50 , 209 , 209 , 109 , 209 , 109 , 209 , 209 , 209 , 109 , 150 , 109 , 109 , 141 , 209 , 109 , 209 , 50 , 183 , 150 , 50 , 109 , 183 , 209 , 109 , 150 , 50 , 150 , 109 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 150 , 109 , 209 , 50 , 141 , 209 , 109 , 150 , 50 , 109 , 50 , 150 , 209 , 50 , 141 , 109 , 209 , 150 , 50 , 209 , 109 , 209 , 50 , 209 , 209 , 109 , 109 , 209 , 109 , 183 , 209 , 109 , 183 , 209 , 109 , 150 , 109 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 150 , 209 , 109 , 141 , 209 , 50 , 109 , 150 , 50 , 109 , 50 , 209 , 209 , 109 , 109 , 209 , 209 , 109 , 209 , 109 , 209 , 150 , 109 , 209 , 109 , 141 , 50 , 209 , 150 , 183 , 50 , 109 , 209 , 183 , 109 , 50 , 150 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 162 , 109 , 209 , 62 , 176 , 209 , 109 , 76 , 209 , 209 , 109 , 109 , 162 , 209 , 209 , 109 , 176 , 209 , 62 , 109 , 109 , 76 , 109 , 162 , 176 , 209 , 209 , 62 , 209 , 109 , 76 , 209 , 109 , 109 , 162 , 109 , 176 , 209 , 209 , 183 , 62 , 209 , 76 , 109 , 183 , 209 , 109 , 150 , 109 , 150 , 109 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 209 , 209 , 109 , 176 , 109 , 109 , 209 , 76 , 162 , 209 , 109 , 209 , 209 , 62 , 109 , 176 , 109 , 209 , 109 , 162 , 76 , 109 , 62 , 209 , 209 , 109 , 176 , 109 , 209 , 162 , 76 , 209 , 209 , 109 , 209 , 176 , 62 , 109 , 209 , 183 , 162 , 109 , 109 , 76 , 183 , 209 , 109 , 150 , 62 , 150 , 109 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 162 , 109 , 209 , 62 , 176 , 209 , 109 , 209 , 76 , 209 , 109 , 162 , 109 , 209 , 109 , 176 , 209 , 62 , 109 , 209 , 76 , 109 , 109 , 162 , 209 , 62 , 176 , 109 , 209 , 76 , 209 , 109 , 209 , 162 , 109 , 209 , 176 , 109 , 62 , 209 , 183 , 209 , 109 , 209 , 183 , 76 , 109 , 150 , 109 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 209 , 109 , 209 , 109 , 176 , 209 , 109 , 162 , 76 , 209 , 109 , 209 , 209 , 62 , 109 , 176 , 209 , 109 , 109 , 162 , 76 , 109 , 62 , 209 , 209 , 109 , 176 , 109 , 209 , 162 , 76 , 209 , 209 , 109 , 62 , 209 , 176 , 109 , 109 , 162 , 209 , 183 , 109 , 209 , 76 , 183 , 62 , 109 , 109 , 150 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 1816 , 150 , 1816 , 1816 , 141 , 50 , 1816 , 1816 , 150 , 50 , 1816 , 50 , 150 , 209 , 141 , 50 , 209 , 109 , 150 , 50 , 209 , 1816 , 109 , 209 , 50 , 1816 , 1816 , 109 , 209 , 1816 , 1816 , 109 , 1816 , 183 , 209 , 109 , 1816 , 1816 , 150 , 109 , 1816 , 116 , 1816 , 116 , 1816 , 150 , 1816 , 183 , 209 , 150 , 209 , 109 , 141 , 50 , 109 , 209 , 50 , 150 , 109 , 50 , 209 , 209 , 109 , 209 , 109 , 209 , 209 , 109 , 209 , 109 , 150 , 109 , 209 , 109 , 50 , 141 , 109 , 209 , 150 , 183 , 50 , 209 , 183 , 109 , 50 , 150 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 150 , 109 , 209 , 50 , 209 , 141 , 150 , 109 , 109 , 50 , 50 , 150 , 209 , 141 , 50 , 209 , 109 , 150 , 50 , 209 , 209 , 109 , 209 , 209 , 50 , 209 , 109 , 183 , 209 , 109 , 209 , 109 , 183 , 109 , 109 , 150 , 109 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 150 , 109 , 209 , 50 , 141 , 209 , 109 , 150 , 50 , 109 , 50 , 209 , 209 , 109 , 209 , 109 , 209 , 109 , 209 , 109 , 150 , 209 , 209 , 109 , 141 , 50 , 109 , 150 , 183 , 209 , 109 , 209 , 183 , 50 , 50 , 109 , 150 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 162 , 109 , 209 , 62 , 176 , 209 , 109 , 209 , 209 , 76 , 109 , 162 , 209 , 109 , 109 , 176 , 209 , 62 , 109 , 209 , 76 , 109 , 109 , 162 , 209 , 176 , 62 , 209 , 109 , 209 , 76 , 209 , 109 , 162 , 109 , 209 , 62 , 109 , 176 , 109 , 183 , 209 , 209 , 183 , 209 , 76 , 150 , 109 , 109 , 150 , 109 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 209 , 176 , 209 , 109 , 209 , 109 , 76 , 209 , 162 , 109 , 209 , 109 , 209 , 109 , 62 , 176 , 209 , 109 , 109 , 162 , 76 , 109 , 62 , 209 , 209 , 176 , 109 , 209 , 109 , 162 , 76 , 209 , 109 , 209 , 62 , 209 , 176 , 109 , 109 , 209 , 109 , 183 , 162 , 76 , 183 , 209 , 109 , 150 , 62 , 150 , 109 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 162 , 109 , 209 , 62 , 176 , 209 , 109 , 209 , 76 , 209 , 109 , 162 , 109 , 109 , 209 , 62 , 176 , 209 , 109 , 209 , 76 , 109 , 109 , 162 , 209 , 176 , 62 , 209 , 109 , 209 , 76 , 209 , 109 , 109 , 162 , 109 , 209 , 176 , 62 , 209 , 209 , 183 , 109 , 76 , 209 , 183 , 109 , 109 , 150 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 , 209 , 209 , 109 , 209 , 109 , 176 , 209 , 109 , 162 , 76 , 109 , 209 , 62 , 209 , 209 , 109 , 176 , 209 , 109 , 109 , 162 , 76 , 109 , 62 , 209 , 209 , 176 , 109 , 209 , 109 , 76 , 162 , 109 , 209 , 209 , 62 , 209 , 109 , 176 , 109 , 209 , 109 , 162 , 183 , 76 , 209 , 183 , 109 , 62 , 150 , 109 , 150 , 116 , 116 , 116 , 116 , 150 , 150 , 183 , 183 };
void move_hexy() {
  int startTime = millis();
  int currentTime = 0;
  int last_update = 0;
  for (int i = 0; i < MOVE_HEXY_SIZE; i++) {
    delayMicroseconds(10);
    currentTime = millis() - startTime;
    uint16_t move_time = move_hexy_time[i];
    while (currentTime < move_time) {
      delayMicroseconds(40);
      currentTime = millis() - startTime;
    }
    uint8_t servo_time = move_hexy_servo[i];
    uint8_t servo_pos  = move_hexy_pos[i];
    changeServo(servo_time, servo_pos * 10);
    last_update = currentTime;
  }
}
//Move Size is 100 bytes
//Run this move by using:
// move_hexy()
void changeServo(int servoTime, int servoAngle) {
  switch (servoTime) {
    case 24: R1Thigh.writeMicroseconds(servoAngle);
      break;
    case 25: R1Knee.writeMicroseconds(servoAngle);
      break;
    case 26: R1Toe.writeMicroseconds(servoAngle);
      break;
    case 20: R2Thigh.writeMicroseconds(servoAngle);
      break;
    case 21: R2Knee.writeMicroseconds(servoAngle);
      break;
    case 22: R2Toe.writeMicroseconds(servoAngle);
      break;
    case 16: R3Thigh.writeMicroseconds(servoAngle);
      break;
    case 17: R3Knee.writeMicroseconds(servoAngle);
      break;
    case 18: R3Toe.writeMicroseconds(servoAngle);
      break;
    case 7: L1Thigh.writeMicroseconds(servoAngle);
      break;
    case 6: L1Knee.writeMicroseconds(servoAngle);
      break;
    case 5: L1Toe.writeMicroseconds(servoAngle);
      break;
    case 11:  L2Thigh.writeMicroseconds(servoAngle);
      break;
    case 10:  L2Knee.writeMicroseconds(servoAngle);
      break;
    case 9: L2Toe.writeMicroseconds(servoAngle);
      break;

    case 15 : L3Thigh.writeMicroseconds(servoAngle);
      break;
    case 14: L3Knee.writeMicroseconds(servoAngle);
      break;
    case 13: L3Toe.writeMicroseconds(servoAngle);
      break;
  }
}

